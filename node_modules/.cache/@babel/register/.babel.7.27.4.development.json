{"{\"assumptions\":{},\"sourceRoot\":\"/home/plazadevina/my-technigo-projects/Technigo projects/express-api-starter/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/plazadevina/my-technigo-projects/Technigo projects/express-api-starter\",\"filename\":\"/home/plazadevina/my-technigo-projects/Technigo projects/express-api-starter/server.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/plazadevina/my-technigo-projects/Technigo projects/express-api-starter\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-duplicate-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-regexp-modifiers\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-json-strings\",\"visitor\":{\"_exploded\":true,\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"DoWhileStatement\":{\"exit\":[null]},\"ForInStatement\":{\"exit\":[null]},\"ForStatement\":{\"exit\":[null]},\"WhileStatement\":{\"exit\":[null]},\"ForOfStatement\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null,null]},\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-regenerator\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/plazadevina/my-technigo-projects/Technigo projects/express-api-starter/node_modules/@babel/preset-env/lib/index.js$47\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/plazadevina/my-technigo-projects/Technigo projects/express-api-starter/node_modules/@babel/preset-env/lib/index.js$48\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.27.4:development":{"value":{"code":"\"use strict\";\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nvar _express = _interopRequireDefault(require(\"express\"));\nvar _cors = _interopRequireDefault(require(\"cors\"));\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\nvar _data = _interopRequireDefault(require(\"./data.json\"));\nvar _expressListEndpoints = _interopRequireDefault(require(\"express-list-endpoints\"));\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\nvar _thoughts = _interopRequireDefault(require(\"/data/thoughts.json\"));\nvar _crypto = _interopRequireDefault(require(\"crypto\"));\nvar _bcryptNodejs = _interopRequireDefault(require(\"bcrypt-nodejs\"));\nvar _userRoutes = _interopRequireDefault(require(\"./userRoutes.js\"));\nvar _thoughtRoutes = _interopRequireDefault(require(\"./thoughtRoutes.js\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { \"default\": e }; }\nfunction _regeneratorRuntime() { \"use strict\"; var r = _regenerator(), e = r.m(_regeneratorRuntime), t = (Object.getPrototypeOf ? Object.getPrototypeOf(e) : e.__proto__).constructor; function n(r) { var e = \"function\" == typeof r && r.constructor; return !!e && (e === t || \"GeneratorFunction\" === (e.displayName || e.name)); } var o = { \"throw\": 1, \"return\": 2, \"break\": 3, \"continue\": 3 }; function a(r) { var e, t; return function (n) { e || (e = { stop: function stop() { return t(n.a, 2); }, \"catch\": function _catch() { return n.v; }, abrupt: function abrupt(r, e) { return t(n.a, o[r], e); }, delegateYield: function delegateYield(r, o, a) { return e.resultName = o, t(n.d, _regeneratorValues(r), a); }, finish: function finish(r) { return t(n.f, r); } }, t = function t(r, _t, o) { n.p = e.prev, n.n = e.next; try { return r(_t, o); } finally { e.next = n.n; } }), e.resultName && (e[e.resultName] = n.v, e.resultName = void 0), e.sent = n.v, e.next = n.n; try { return r.call(this, e); } finally { n.p = e.prev, n.n = e.next; } }; } return (_regeneratorRuntime = function _regeneratorRuntime() { return { wrap: function wrap(e, t, n, o) { return r.w(a(e), t, n, o && o.reverse()); }, isGeneratorFunction: n, mark: r.m, awrap: function awrap(r, e) { return new _OverloadYield(r, e); }, AsyncIterator: _regeneratorAsyncIterator, async: function async(r, e, t, o, u) { return (n(e) ? _regeneratorAsyncGen : _regeneratorAsync)(a(r), e, t, o, u); }, keys: _regeneratorKeys, values: _regeneratorValues }; })(); }\nfunction _regeneratorValues(e) { if (null != e) { var t = e[\"function\" == typeof Symbol && Symbol.iterator || \"@@iterator\"], r = 0; if (t) return t.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) return { next: function next() { return e && r >= e.length && (e = void 0), { value: e && e[r++], done: !e }; } }; } throw new TypeError(_typeof(e) + \" is not iterable\"); }\nfunction _regeneratorKeys(e) { var n = Object(e), r = []; for (var t in n) r.unshift(t); return function e() { for (; r.length;) if ((t = r.pop()) in n) return e.value = t, e.done = !1, e; return e.done = !0, e; }; }\nfunction _regeneratorAsync(n, e, r, t, o) { var a = _regeneratorAsyncGen(n, e, r, t, o); return a.next().then(function (n) { return n.done ? n.value : a.next(); }); }\nfunction _regeneratorAsyncGen(r, e, t, o, n) { return new _regeneratorAsyncIterator(_regenerator().w(r, e, t, o), n || Promise); }\nfunction _regeneratorAsyncIterator(t, e) { function n(r, o, i, f) { try { var c = t[r](o), u = c.value; return u instanceof _OverloadYield ? e.resolve(u.v).then(function (t) { n(\"next\", t, i, f); }, function (t) { n(\"throw\", t, i, f); }) : e.resolve(u).then(function (t) { c.value = t, i(c); }, function (t) { return n(\"throw\", t, i, f); }); } catch (t) { f(t); } } var r; this.next || (_regeneratorDefine2(_regeneratorAsyncIterator.prototype), _regeneratorDefine2(_regeneratorAsyncIterator.prototype, \"function\" == typeof Symbol && Symbol.asyncIterator || \"@asyncIterator\", function () { return this; })), _regeneratorDefine2(this, \"_invoke\", function (t, o, i) { function f() { return new e(function (e, r) { n(t, i, e, r); }); } return r = r ? r.then(f, f) : f(); }, !0); }\nfunction _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = \"function\" == typeof Symbol ? Symbol : {}, n = r.iterator || \"@@iterator\", o = r.toStringTag || \"@@toStringTag\"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, \"_invoke\", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError(\"Generator is already running\"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = \"next\"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError(\"iterator result is not an object\"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i[\"return\"]) && t.call(i), c < 2 && (u = TypeError(\"The iterator does not provide a '\" + o + \"' method\"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, \"GeneratorFunction\")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, \"constructor\", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = \"GeneratorFunction\", _regeneratorDefine2(GeneratorFunctionPrototype, o, \"GeneratorFunction\"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, \"Generator\"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, \"toString\", function () { return \"[object Generator]\"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }\nfunction _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, \"\", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { if (r) i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n;else { var o = function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); }; o(\"next\", 0), o(\"throw\", 1), o(\"return\", 2); } }, _regeneratorDefine2(e, r, n, t); }\nfunction _OverloadYield(e, d) { this.v = e, this.k = d; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\n// Ensure the MONGO_URL environment variable is set in your environment before running the server\n// Removed duplicate and incorrect thoughtSchema definition\nvar mongoUrl = process.env.MONGO_URL || \"mongodb://localhost/auth\";\n_mongoose[\"default\"].connect(mongoUrl, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\n_mongoose[\"default\"].Promise = Promise;\nvar User = _mongoose[\"default\"].model('User', {\n  name: {\n    type: String,\n    unique: true\n  },\n  password: {\n    type: String,\n    required: true\n  },\n  accesToken: {\n    type: String,\n    \"default\": function _default() {\n      return _crypto[\"default\"].randomBytes(128).toString('hex');\n    }\n  }\n}); // Close the User model definition\n\n// Example\n// POST Request\nvar request = {\n  name: \"Bob\",\n  password: \"foobar\"\n};\n// DB Entry\nvar dbEntry = {\n  name: \"Bob\",\n  password: \"5abbc32983def\"\n};\n_bcryptNodejs[\"default\"].compareSync(request.password, dbEntry.password);\n\n// One-way encryption\nvar user = new User({\n  name: \"Bob\",\n  password: _bcryptNodejs[\"default\"].hashSync(\"foobar\")\n});\nuser.save();\n_mongoose[\"default\"].Promise = Promise;\nvar Task = _mongoose[\"default\"].model('Task', {\n  text: {\n    type: String,\n    required: true,\n    minLength: 5\n  },\n  complete: {\n    type: Boolean,\n    \"default\": false\n  },\n  createdAt: {\n    type: Date,\n    \"default\": Date.now\n  }\n}); // Added missing closing brace\n\nvar Person = _mongoose[\"default\"].model('Person', {\n  name: {\n    type: String,\n    required: true,\n    minLength: 2,\n    maxLength: 50\n  },\n  height: {\n    type: Number,\n    required: true,\n    min: 5\n  }\n}); // Properly closed Person model definition\n\nvar thoughtSchema = new _mongoose[\"default\"].Schema({\n  id: Number,\n  name: String,\n  scientificName: String\n}); // Added missing closing brace\n\nif (process.env.RESET_DB) {\n  var seedDatabase = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return Thought.deleteMany({});\n          case 2:\n            thoughtData.forEach(function (thought) {\n              new Thought(thought).save();\n            });\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return function seedDatabase() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  seedDatabase();\n  var _thoughtSchema = new _mongoose[\"default\"].Schema({\n    id: Number,\n    name: String,\n    symbolism: String,\n    scientificName: String,\n    color: String,\n    description: String,\n    lastSpottedTimestamp: {\n      type: Date,\n      \"default\": Date.now\n    }\n  }); // Properly closed thoughtSchema definition\n\n  _app.get(\"/thoughts\", /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(req, res) {\n      var symbol, query, filteredThoughts;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            symbol = req.query.symbol;\n            query = {};\n            if (symbol) {\n              query.symbolism = symbol;\n            }\n            _context2.prev = 3;\n            _context2.next = 6;\n            return Thought.find(query);\n          case 6:\n            filteredThoughts = _context2.sent;\n            if (!(filteredThoughts.length === 0)) {\n              _context2.next = 9;\n              break;\n            }\n            return _context2.abrupt(\"return\", res.status(404).json({\n              success: false,\n              response: [],\n              message: \"No thoughts found for that query. Try another one.\"\n            }));\n          case 9:\n            res.status(200).json({\n              success: true,\n              response: filteredThoughts,\n              message: \"Success\"\n            });\n            _context2.next = 15;\n            break;\n          case 12:\n            _context2.prev = 12;\n            _context2.t0 = _context2[\"catch\"](3);\n            res.status(500).json({\n              success: false,\n              response: _context2.t0,\n              message: \"Failed to fetch thoughts\"\n            });\n          case 15:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2, null, [[3, 12]]);\n    }));\n    return function (_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }());\n  _app.get(\"/thoughts/:id\", /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(req, res) {\n      var id, thought;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            id = req.params.id;\n            _context3.prev = 1;\n            _context3.next = 4;\n            return Thought.findById(id);\n          case 4:\n            thought = _context3.sent;\n            if (thought) {\n              _context3.next = 7;\n              break;\n            }\n            return _context3.abrupt(\"return\", res.status(404).json({\n              success: false,\n              response: null,\n              message: \"Thought not found\"\n            }));\n          case 7:\n            res.status(200).json({\n              success: true,\n              response: thought\n            });\n            _context3.next = 13;\n            break;\n          case 10:\n            _context3.prev = 10;\n            _context3.t0 = _context3[\"catch\"](1);\n            res.status(500).json({\n              success: false,\n              response: _context3.t0,\n              message: \"Thought couldn't be found\"\n            });\n          case 13:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3, null, [[1, 10]]);\n    }));\n    return function (_x3, _x4) {\n      return _ref3.apply(this, arguments);\n    };\n  }());\n  _app.patch(\"/thoughts/:id\", /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(req, res) {\n      var id, updatedThought;\n      return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            id = req.params.id;\n            _context4.prev = 1;\n            _context4.next = 4;\n            return Thought.findByIdAndUpdate(id, req.body, {\n              \"new\": true\n            });\n          case 4:\n            updatedThought = _context4.sent;\n            if (updatedThought) {\n              _context4.next = 7;\n              break;\n            }\n            return _context4.abrupt(\"return\", res.status(404).json({\n              success: false,\n              response: null,\n              message: \"Thought not found\"\n            }));\n          case 7:\n            res.status(200).json({\n              success: true,\n              response: updatedThought,\n              message: \"Thought updated successfully\"\n            });\n            _context4.next = 13;\n            break;\n          case 10:\n            _context4.prev = 10;\n            _context4.t0 = _context4[\"catch\"](1);\n            res.status(500).json({\n              success: false,\n              response: _context4.t0,\n              message: \"Thought couldn't be updated\"\n            });\n          case 13:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, _callee4, null, [[1, 10]]);\n    }));\n    return function (_x5, _x6) {\n      return _ref4.apply(this, arguments);\n    };\n  }());\n  _app.listen(_port, function () {\n    console.log(\"Server running on http://localhost:\".concat(_port));\n  });\n\n  // Defines the port the app will run on. Defaults to 8080, but can be overridden\n  // when starting the server. Example command to overwrite PORT env variable value:\n  // PORT=9000 npm start\n\n  var _port = process.env.PORT || 8080;\n  var _app = (0, _express[\"default\"])();\n  var _authenticate = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(req, res, next) {\n      var user;\n      return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n        while (1) switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return User.findOne({\n              accesToken: req.headers('Authorization')\n            });\n          case 2:\n            user = _context5.sent;\n            if (user) {\n              req.user = user;\n              next();\n            } else {\n              res.status(401).json({\n                loggedOut: true\n              });\n            }\n          case 4:\n          case \"end\":\n            return _context5.stop();\n        }\n      }, _callee5);\n    }));\n    return function _authenticate(_x7, _x8, _x9) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  // Removed redundant import for express-list-endpoints\n\n  // Add middlewares to enable cors and json body parsing\n  _app.use((0, _cors[\"default\"])());\n  _app.use(_express[\"default\"].json());\n  _app.use(_bodyParser[\"default\"].json());\n\n  // Start defining your routes here\n  _app.get(\"/\", function (req, res) {\n    var endpoints = (0, _expressListEndpoints[\"default\"])(_app);\n    res.json({\n      message: \"Welcome to Happy Thoughts API\",\n      endpoints: endpoints\n    });\n  });\n  _app.post('/people', /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(req, res) {\n      var person, savedPerson;\n      return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n        while (1) switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.prev = 0;\n            person = new Person(req.body);\n            _context6.next = 4;\n            return person.save();\n          case 4:\n            savedPerson = _context6.sent;\n            res.status(200).json(savedPerson);\n            _context6.next = 11;\n            break;\n          case 8:\n            _context6.prev = 8;\n            _context6.t0 = _context6[\"catch\"](0);\n            // Bad Request\n            res.status(400).json({\n              message: 'Could not save person',\n              errors: _context6.t0.errors\n            });\n          case 11:\n          case \"end\":\n            return _context6.stop();\n        }\n      }, _callee6, null, [[0, 8]]);\n    }));\n    return function (_x0, _x1) {\n      return _ref6.apply(this, arguments);\n    };\n  }());\n}\nn;\n\n// Route to fetch all data\napp.get(\"/data\", function (req, res) {\n  res.json(_data[\"default\"]);\n});\napp.get(\"/data/:id\", function (req, res) {\n  console.log('req.params.id', req.params.id);\n  var item = _data[\"default\"].find(function (item) {\n    return item.id === req.params.id;\n  });\n  if (item) {\n    res.json(item);\n  } else {\n    res.status(404).json({\n      error: \"Item not found\"\n    });\n  }\n});\nvar endpointList = expressListEndpoints(app);\napp.get(\"/endpoints\", function (req, res) {\n  res.json({\n    message: \"List of thoughts\",\n    endpoints: endpointList\n  });\n});\napp.get(\"/endpoints/:path\", function (req, res) {\n  var path = req.params.path;\n  var endpoint = endpointList.find(function (endpoint) {\n    return endpoint.path.includes(path);\n  });\n  if (endpoint) {\n    res.json({\n      message: \"Endpoint for path \".concat(path, \" found\"),\n      endpoint: endpoint\n    });\n  } else {\n    res.status(404).json({\n      error: \"Endpoint not found\"\n    });\n  }\n});\napp.get(\"css/style.css\", function (req, res) {\n  res.sendFile(__dirname + \"/css/style.css\");\n});\napp.get(\"js/script.js\", function (req, res) {\n  res.sendFile(__dirname + \"/js/script.js\");\n});\napp.get(\"/html/index.html\", function (req, res) {\n  res.sendFile(__dirname + \"/html/index.html\");\n});\napp.get(\"/html/about.html\", function (req, res) {\n  res.sendFile(__dirname + \"/html/about.html\");\n});\napp.get(\"/html/contact.html\", function (req, res) {\n  res.sendFile(__dirname + \"/html/contact.html\");\n});\napp.get(\"/html/404.html\", function (req, res) {\n  res.sendFile(__dirname + \"/html/404.html\");\n});\napp.get(\"/html/500.html\", function (req, res) {\n  res.sendFile(__dirname + \"/html/500.html\");\n});\napp.get(\"/html/terms.html\", function (req, res) {\n  res.sendFile(__dirname + \"/html/terms.html\");\n});\napp.get(\"/html/privacy.html\", function (req, res) {\n  res.sendFile(__dirname + \"/html/privacy.html\");\n});\napp.get(\"/html/sitemap.html\", function (req, res) {\n  res.sendFile(__dirname + \"/html/sitemap.html\");\n});\napp.get(\"/html/robots.txt\", function (req, res) {\n  res.sendFile(__dirname + \"/html/robots.txt\");\n});\napp.get(\"/html/favicon.ico\", function (req, res) {\n  res.sendFile(__dirname + \"/html/favicon.ico\");\n});\napp.get(\"/html/apple-touch-icon.png\", function (req, res) {\n  res.sendFile(__dirname + \"/html/apple-touch-icon.png\");\n});\napp.get(\"/endpoints\", function (req, res) {\n  var endpoints = (0, _expressListEndpoints[\"default\"])(app);\n  res.json({\n    message: \"List of all endpoints\",\n    endpoints: endpoints\n  });\n});\napp.get('/tasks', /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7(req, res) {\n    var tasks;\n    return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n      while (1) switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          _context7.next = 3;\n          return Task.find().sort({\n            createdAt: 'desc'\n          }).limit(20).exec();\n        case 3:\n          tasks = _context7.sent;\n          res.json(tasks);\n          _context7.next = 10;\n          break;\n        case 7:\n          _context7.prev = 7;\n          _context7.t0 = _context7[\"catch\"](0);\n          res.status(500).json({\n            message: \"Failed to fetch tasks\",\n            error: _context7.t0\n          });\n        case 10:\n        case \"end\":\n          return _context7.stop();\n      }\n    }, _callee7, null, [[0, 7]]);\n  }));\n  return function (_x10, _x11) {\n    return _ref7.apply(this, arguments);\n  };\n}());\napp.post('/tasks', /*#__PURE__*/function () {\n  var _ref8 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8(req, res) {\n    var _req$body, text, complete, task, savedTask;\n    return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n      while (1) switch (_context8.prev = _context8.next) {\n        case 0:\n          _req$body = req.body, text = _req$body.text, complete = _req$body.complete;\n          _context8.prev = 1;\n          task = new Task({\n            text: text,\n            complete: complete\n          });\n          _context8.next = 5;\n          return task.save();\n        case 5:\n          savedTask = _context8.sent;\n          res.status(201).json(savedTask);\n          _context8.next = 12;\n          break;\n        case 9:\n          _context8.prev = 9;\n          _context8.t0 = _context8[\"catch\"](1);\n          res.status(400).json({\n            message: 'Could not save task to the Database',\n            error: _context8.t0.errors\n          });\n        case 12:\n        case \"end\":\n          return _context8.stop();\n      }\n    }, _callee8, null, [[1, 9]]);\n  }));\n  return function (_x12, _x13) {\n    return _ref8.apply(this, arguments);\n  };\n}());\napp.post('/sessions', /*#__PURE__*/function () {\n  var _ref9 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee9(req, res) {\n    var user;\n    return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n      while (1) switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return User.findOne({\n            name: req.body.name\n          });\n        case 2:\n          user = _context9.sent;\n          if (user && _bcryptNodejs[\"default\"].compareSync(req.body.password, user.password)) {\n            // Success\n            res.json({\n              _id: user._id,\n              accessToken: user.accesToken\n            });\n          } else {\n            // Failure\n            // a. User does not exist\n            // b. Encrypted password does not match\n            res.json({\n              notFound: true\n            });\n          }\n        case 4:\n        case \"end\":\n          return _context9.stop();\n      }\n    }, _callee9);\n  }));\n  return function (_x14, _x15) {\n    return _ref9.apply(this, arguments);\n  };\n}());\napp.post('/tweets', authenticate);\napp.post('/tweets', /*#__PURE__*/function () {\n  var _ref0 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee0(req, res) {\n    return _regeneratorRuntime().wrap(function _callee0$(_context0) {\n      while (1) switch (_context0.prev = _context0.next) {\n        case 0:\n        case \"end\":\n          return _context0.stop();\n      }\n    }, _callee0);\n  }));\n  return function (_x16, _x17) {\n    return _ref0.apply(this, arguments);\n  };\n}());\napp.get('/secure-data', authenticate, /*#__PURE__*/function () {\n  var _ref1 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee1(req, res) {\n    var secureData;\n    return _regeneratorRuntime().wrap(function _callee1$(_context1) {\n      while (1) switch (_context1.prev = _context1.next) {\n        case 0:\n          _context1.prev = 0;\n          _context1.next = 3;\n          return SecureData.find();\n        case 3:\n          secureData = _context1.sent;\n          res.status(200).json(secureData);\n          _context1.next = 10;\n          break;\n        case 7:\n          _context1.prev = 7;\n          _context1.t0 = _context1[\"catch\"](0);\n          res.status(500).json({\n            message: \"Failed to fetch secure data\",\n            error: _context1.t0\n          });\n        case 10:\n        case \"end\":\n          return _context1.stop();\n      }\n    }, _callee1, null, [[0, 7]]);\n  }));\n  return function (_x18, _x19) {\n    return _ref1.apply(this, arguments);\n  };\n}()); // Close the '/secure-data' route\n\napp[\"delete\"](\"/thought/id\", /*#__PURE__*/function () {\n  var _ref10 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee10(req, res) {\n    var thought;\n    return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n      while (1) switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.prev = 0;\n          _context10.next = 3;\n          return Thought.findByIdAndDelete(req.params.id);\n        case 3:\n          thought = _context10.sent;\n          if (thought) {\n            _context10.next = 6;\n            break;\n          }\n          return _context10.abrupt(\"return\", res.status(404).json({\n            success: false,\n            response: null,\n            message: \"Thought couldn't be found. Can't delete.\"\n          }));\n        case 6:\n          res.status(200).json({\n            success: true,\n            response: thought,\n            message: \"Thought deleted successfully.\"\n          });\n          _context10.next = 12;\n          break;\n        case 9:\n          _context10.prev = 9;\n          _context10.t0 = _context10[\"catch\"](0);\n          res.status(500).json({\n            success: false,\n            response: _context10.t0,\n            message: \"Couldn't delete thought\"\n          });\n        case 12:\n        case \"end\":\n          return _context10.stop();\n      }\n    }, _callee10, null, [[0, 9]]);\n  }));\n  return function (_x20, _x21) {\n    return _ref10.apply(this, arguments);\n  };\n}());\napp.patch(\"/thoughts/:id\", /*#__PURE__*/function () {\n  var _ref11 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee11(req, res) {\n    var id, _req$body2, newThought, color, thought;\n    return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n      while (1) switch (_context11.prev = _context11.next) {\n        case 0:\n          id = req.params.id;\n          _req$body2 = req.body, newThought = _req$body2.newThought, color = _req$body2.color;\n          _context11.prev = 2;\n          _context11.next = 5;\n          return Thought.findByIdAndUpdate(id, {\n            name: newThought,\n            color: color\n          }, {\n            \"new\": true,\n            runValidators: true\n          });\n        case 5:\n          thought = _context11.sent;\n          if (thought) {\n            _context11.next = 8;\n            break;\n          }\n          return _context11.abrupt(\"return\", res.status(404).json({\n            success: false,\n            response: null,\n            message: \"Thought couldn't be edited.\"\n          }));\n        case 8:\n          res.status(200).json({\n            success: true,\n            response: thought,\n            message: \"Thought updated successfully.\"\n          });\n          _context11.next = 14;\n          break;\n        case 11:\n          _context11.prev = 11;\n          _context11.t0 = _context11[\"catch\"](2);\n          res.status(500).json({\n            success: false,\n            response: _context11.t0,\n            message: \"Thought couldn't be updated\"\n          });\n        case 14:\n        case \"end\":\n          return _context11.stop();\n      }\n    }, _callee11, null, [[2, 11]]);\n  }));\n  return function (_x22, _x23) {\n    return _ref11.apply(this, arguments);\n  };\n}());\n// Start the server\napp.listen(port, function () {\n  console.log(\"Server running on http://localhost:\".concat(port));\n});\napp.get(\"/data\", function (req, res) {\n  var color = req.query.color;\n  console.log('queries:', req.query);\n  res.json(_data[\"default\"]);\n});\nconsole.log(_crypto[\"default\"].randomBytes(128).toString('hex'));\nconsole.log(_bcryptNodejs[\"default\"].hashSync(\"foobar\"));\n\n// Ensure all routes and blocks are properly closed\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["_express","_interopRequireDefault","require","_cors","_bodyParser","_data","_expressListEndpoints","_mongoose","_thoughts","_crypto","_bcryptNodejs","_userRoutes","_thoughtRoutes","e","__esModule","_regeneratorRuntime","r","_regenerator","m","t","Object","getPrototypeOf","__proto__","constructor","n","displayName","name","o","a","stop","_catch","v","abrupt","delegateYield","resultName","d","_regeneratorValues","finish","f","_t","p","prev","next","sent","call","wrap","w","reverse","isGeneratorFunction","mark","awrap","_OverloadYield","AsyncIterator","_regeneratorAsyncIterator","async","u","_regeneratorAsyncGen","_regeneratorAsync","keys","_regeneratorKeys","values","Symbol","iterator","isNaN","length","value","done","TypeError","_typeof","unshift","pop","then","Promise","i","c","resolve","_regeneratorDefine2","prototype","asyncIterator","toStringTag","Generator","create","y","G","bind","l","GeneratorFunction","GeneratorFunctionPrototype","setPrototypeOf","defineProperty","_regeneratorDefine","enumerable","configurable","writable","_invoke","k","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","mongoUrl","process","env","MONGO_URL","mongoose","connect","useNewUrlParser","useUnifiedTopology","User","model","type","String","unique","password","required","accesToken","default","crypto","randomBytes","toString","request","dbEntry","bcrypt","compareSync","user","hashSync","save","Task","text","minLength","complete","Boolean","createdAt","Date","now","Person","maxLength","height","Number","min","thoughtSchema","Schema","id","scientificName","RESET_DB","seedDatabase","_ref","_callee","_callee$","_context","Thought","deleteMany","thoughtData","forEach","thought","symbolism","color","description","lastSpottedTimestamp","app","get","_ref2","_callee2","req","res","symbol","query","filteredThoughts","_callee2$","_context2","find","status","json","success","response","message","t0","_x","_x2","_ref3","_callee3","_callee3$","_context3","params","findById","_x3","_x4","patch","_ref4","_callee4","updatedThought","_callee4$","_context4","findByIdAndUpdate","body","_x5","_x6","listen","port","console","log","concat","PORT","express","authenticate","_ref5","_callee5","_callee5$","_context5","findOne","headers","loggedOut","_x7","_x8","_x9","use","cors","bodyParser","endpoints","listEndpoints","post","_ref6","_callee6","person","savedPerson","_callee6$","_context6","errors","_x0","_x1","data","item","error","endpointList","expressListEndpoints","path","endpoint","includes","sendFile","__dirname","_ref7","_callee7","tasks","_callee7$","_context7","sort","limit","exec","_x10","_x11","_ref8","_callee8","_req$body","task","savedTask","_callee8$","_context8","_x12","_x13","_ref9","_callee9","_callee9$","_context9","_id","accessToken","notFound","_x14","_x15","_ref0","_callee0","_callee0$","_context0","_x16","_x17","_ref1","_callee1","secureData","_callee1$","_context1","SecureData","_x18","_x19","_ref10","_callee10","_callee10$","_context10","findByIdAndDelete","_x20","_x21","_ref11","_callee11","_req$body2","newThought","_callee11$","_context11","runValidators","_x22","_x23"],"sourceRoot":"/home/plazadevina/my-technigo-projects/Technigo projects/express-api-starter/","sources":["server.js"],"sourcesContent":["import express from \"express\";\nimport cors from \"cors\";\nimport bodyParser from 'body-parser';\n\nimport data from \"./data.json\";\nimport listEndpoints from 'express-list-endpoints'\n\nimport mongoose from \"mongoose\"\n\nimport thoughtsData from \"/data/thoughts.json\";\nimport crypto from 'crypto'\nimport bcrypt from 'bcrypt-nodejs'\n\nimport userRoutes from \"./userRoutes.js\";\nimport thoughtRoutes from \"./thoughtRoutes.js\";\n\n// Ensure the MONGO_URL environment variable is set in your environment before running the server\n// Removed duplicate and incorrect thoughtSchema definition\nconst mongoUrl = process.env.MONGO_URL || \"mongodb://localhost/auth\";\nmongoose.connect(mongoUrl, { useNewUrlParser: true, useUnifiedTopology: true });\nmongoose.Promise = Promise;\nconst User = mongoose.model('User',{\n  name:{\n    type: String,\n    unique: true\n  },\n  password:{\n    type:String,\n    required:true\n  },\n  accesToken:{\n    type:String,\n    default: () => crypto.randomBytes(128).toString('hex')\n  }\n}); // Close the User model definition\n\n// Example\n// POST Request\nconst request = {name :\"Bob\", password: \"foobar\"};\n// DB Entry\nconst dbEntry = {name: \"Bob\", password: \"5abbc32983def\"}\nbcrypt.compareSync(request.password, dbEntry.password);\n\n// One-way encryption\nconst user = new User({name: \"Bob\", password: bcrypt.hashSync(\"foobar\") });\nuser.save();\n\nmongoose.Promise = Promise;\nconst Task = mongoose.model('Task', {\n  text: {\n    type: String,\n    required: true,\n    minLength: 5\n  },\n  complete: {\n    type: Boolean,\n    default: false\n  },\n  createdAt: {\n    type: Date,\n    default: Date.now\n  }\n}); // Added missing closing brace\n\nconst Person = mongoose.model('Person', {\n  name: {\n    type: String,\n    required: true,\n    minLength: 2,\n    maxLength: 50\n  },\n  height: {\n    type: Number,\n    required: true,\n    min: 5,\n  }\n}); // Properly closed Person model definition\n\n\n\n\nconst thoughtSchema = new mongoose.Schema({\n  id: Number,\n  name: String,\n  scientificName: String,\n}); // Added missing closing brace\n\nif (process.env.RESET_DB) {\n  const seedDatabase = async () => {\n    await Thought.deleteMany({});\n  thoughtData.forEach(thought => {\n    new Thought(thought).save();\n  });\n};\nseedDatabase();\nconst thoughtSchema = new mongoose.Schema({\n  id: Number,\n  name: String,\n  symbolism: String,\n  scientificName: String,\n  color: String,\n  description: String,\n  lastSpottedTimestamp: {\n    type: Date,\n    default: Date.now,\n  },\n}); // Properly closed thoughtSchema definition\n\napp.get(\"/thoughts\", async (req, res) => {\n        const { symbol } = req.query;\n        const query = {};\n      \n        if (symbol) {\n          query.symbolism = symbol;\n        }\n      \n        try {\n          const filteredThoughts = await Thought.find(query);\n      \n          if (filteredThoughts.length === 0) {\n            return res.status(404).json({\n              success: false,\n              response: [],\n              message: \"No thoughts found for that query. Try another one.\"\n            });\n          }\n      \n          res.status(200).json({\n            success: true,\n            response: filteredThoughts,\n            message: \"Success\"\n          });\n        } catch (error) {\n          res.status(500).json({\n            success: false,\n            response: error,\n            message: \"Failed to fetch thoughts\"\n          });\n        }\n      });\n                \n      app.get(\"/thoughts/:id\", async (req, res) => {\n        const { id } = req.params;\n      \n        try {\n          const thought = await Thought.findById(id);\n      \n          if (!thought) {\n            return res.status(404).json({ \n              success: false,\n              response: null,\n              message: \"Thought not found\"\n            });\n          }\n      \n          res.status(200).json({\n            success: true,\n            response: thought\n          });\n        } catch (error) {\n          res.status(500).json({\n            success: false,\n            response: error, \n            message: \"Thought couldn't be found\"\n          });\n        }\n      });\n\n      app.patch(\"/thoughts/:id\", async (req, res) => {\n        const { id } = req.params;\n        try {\n          const updatedThought = await Thought.findByIdAndUpdate(id, req.body, { new: true });\n          if (!updatedThought) {\n            return res.status(404).json({\n              success: false,\n              response: null,\n              message: \"Thought not found\"\n            });\n          }\n          res.status(200).json({\n            success: true,\n            response: updatedThought,\n            message: \"Thought updated successfully\"\n          });\n        } catch (error) {\n          res.status(500).json({\n            success: false,\n            response: error,\n            message: \"Thought couldn't be updated\"\n          });\n        }\n      });\n          \n      app.listen(port, () => {\n        console.log(`Server running on http://localhost:${port}`)\n      });\n\n// Defines the port the app will run on. Defaults to 8080, but can be overridden\n// when starting the server. Example command to overwrite PORT env variable value:\n// PORT=9000 npm start\n\nconst port = process.env.PORT || 8080;\nconst app = express();\n\nconst authenticate = async (req, res, next) => {\n  const user = await User.findOne({accesToken:req.headers('Authorization')});\n  if(user){\n    req.user = user;\n    next();\n  } else {\n    res.status(401).json({loggedOut: true});\n  }\n};\n\n// Removed redundant import for express-list-endpoints\n\n\n\n// Add middlewares to enable cors and json body parsing\napp.use(cors());\napp.use(express.json());\napp.use(bodyParser.json());\n\n\n\n\n// Start defining your routes here\napp.get(\"/\", (req, res) => {\n  const endpoints = listEndpoints(app);\n  res.json({\n    message: \"Welcome to Happy Thoughts API\",\n    endpoints: endpoints,\n  });\n});\n\napp.post('/people', async (req, res) => {\n  try {\n    const person = new Person(req.body);\n    const savedPerson = await person.save();\n    res.status(200).json(savedPerson);\n  } catch (err) {\n    // Bad Request\n    res.status(400).json({ message: 'Could not save person', errors: err.errors });\n  }\n});\n}n;\n\n// Route to fetch all data\napp.get(\"/data\", (req, res) => {\n  res.json(data);\n});\n\napp.get(\"/data/:id\", (req, res) => {\n  console.log('req.params.id', req.params.id);\n  const item = data.find((item) => item.id === req.params.id);\n  if (item) {\n    res.json(item);\n  } else {\n    res.status(404).json({ error: \"Item not found\" });\n  }\n});\nconst endpointList = expressListEndpoints(app);\napp.get(\"/endpoints\", (req, res) => {\n  res.json({\n    message: \"List of thoughts\",\n    endpoints: endpointList\n  });\n});\napp.get(\"/endpoints/:path\", (req, res) => {\n  const path = req.params.path;\n  const endpoint = endpointList.find((endpoint) => endpoint.path.includes(path));\n  if (endpoint) {\n    res.json({\n      message: `Endpoint for path ${path} found`,\n      endpoint: endpoint,\n    });\n  } else {\n    res.status(404).json({ error: \"Endpoint not found\" });\n  }\n});\napp.get(\"css/style.css\", (req, res) => {\n  res.sendFile(__dirname + \"/css/style.css\");\n});\napp.get(\"js/script.js\", (req, res) => {\n  res.sendFile(__dirname + \"/js/script.js\");\n});\napp.get(\"/html/index.html\", (req, res) => {\n  res.sendFile(__dirname + \"/html/index.html\");\n});\napp.get(\"/html/about.html\", (req, res) => {\n  res.sendFile(__dirname + \"/html/about.html\");\n});\napp.get(\"/html/contact.html\", (req, res) => {\n  res.sendFile(__dirname + \"/html/contact.html\");\n});\napp.get(\"/html/404.html\", (req, res) => {\n  res.sendFile(__dirname + \"/html/404.html\");\n});\napp.get(\"/html/500.html\", (req, res) => {\n  res.sendFile(__dirname + \"/html/500.html\");\n});\napp.get(\"/html/terms.html\", (req, res) => {\n  res.sendFile(__dirname + \"/html/terms.html\");\n});\napp.get(\"/html/privacy.html\", (req, res) => {\n  res.sendFile(__dirname + \"/html/privacy.html\");\n});\napp.get(\"/html/sitemap.html\", (req, res) => {\n  res.sendFile(__dirname + \"/html/sitemap.html\");\n});\napp.get(\"/html/robots.txt\", (req, res) => {\n  res.sendFile(__dirname + \"/html/robots.txt\");\n});\napp.get(\"/html/favicon.ico\", (req, res) => {\n  res.sendFile(__dirname + \"/html/favicon.ico\");\n});\napp.get(\"/html/apple-touch-icon.png\", (req, res) => {\n  res.sendFile(__dirname + \"/html/apple-touch-icon.png\");\n});\n\napp.get(\"/endpoints\", (req, res) => {\n  const endpoints = listEndpoints(app);\n  res.json({\n    message: \"List of all endpoints\",\n    endpoints: endpoints,\n  });\n});\napp.get('/tasks', async (req, res) => {\n  try {\n    // Endpoint to get all tasks\n    const tasks = await Task.find().sort({createdAt: 'desc'}).limit(20).exec();\n    res.json(tasks);\n  } catch (error) {\n    res.status(500).json({ message: \"Failed to fetch tasks\", error });\n  }\n});\n\napp.post('/tasks', async (req, res) => {\n  const { text, complete } = req.body;\n  try {\n    const task = new Task({ text, complete });\n    const savedTask = await task.save();\n    res.status(201).json(savedTask);\n  } catch (err) {\n    res.status(400).json({ message: 'Could not save task to the Database', error: err.errors });\n  }\n});\n\napp.post('/sessions', async (req, res) => {\n  const user = await User.findOne({ name: req.body.name });\n  if (user && bcrypt.compareSync(req.body.password, user.password)) {\n    // Success\n    res.json({ _id: user._id, accessToken: user.accesToken });\n  } else {\n    // Failure\n    // a. User does not exist\n    // b. Encrypted password does not match\n    res.json({ notFound: true });\n  }\n});\napp.post('/tweets', authenticate);\napp.post ('/tweets', async (req,res) => {\n  \n// This will only happen if the next function is called fromthe middleare!\n// now we can access the req.user object from the middleware\n});\n\napp.get('/secure-data', authenticate, async (req, res) => {\n  try {\n    const secureData = await SecureData.find();\n    res.status(200).json(secureData);\n  } catch (error) {\n    res.status(500).json({ message: \"Failed to fetch secure data\", error });\n  }\n}); // Close the '/secure-data' route\n\napp.delete(\"/thought/id\", async (req, res) => {\n  try {\n    const thought = await Thought.findByIdAndDelete(req.params.id);\n    if (!thought) {\n      return res.status(404).json({\n        success: false,\n        response: null,\n        message: \"Thought couldn't be found. Can't delete.\"\n      });\n    }\n    res.status(200).json({\n      success: true,\n      response: thought,\n      message: \"Thought deleted successfully.\"\n    });\n  } catch (error) {\n    res.status(500).json({\n      success: false,\n      response: error,\n      message: \"Couldn't delete thought\"\n    });\n  }\n});\n\napp.patch(\"/thoughts/:id\", async (req, res) => {\n  const { id } = req.params;\n  const { newThought, color } = req.body;\n  try {\n    const thought = await Thought.findByIdAndUpdate(\n      id,\n      { name: newThought, color },\n      { new: true, runValidators: true }\n    );\n    if (!thought) {\n      return res.status(404).json({\n        success: false,\n        response: null,\n        message: \"Thought couldn't be edited.\"\n      });\n    }\n    res.status(200).json({\n      success: true,\n      response: thought,\n      message: \"Thought updated successfully.\"\n    });\n  } catch (error) {\n    res.status(500).json({\n      success: false,\n      response: error,\n      message: \"Thought couldn't be updated\"\n    });\n  }\n});\n// Start the server\napp.listen(port, () => {\n  console.log(`Server running on http://localhost:${port}`);\n});\n\napp.get(\"/data\", (req, res) => {\n  const { color } = req.query;\n  console.log('queries:', req.query);\n  res.json(data);\n});\nconsole.log(crypto.randomBytes(128).toString('hex'));\nconsole.log(bcrypt.hashSync(\"foobar\"));\n\n// Ensure all routes and blocks are properly closed"],"mappings":"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","ignoreList":[]}},"mtime":1749839616183}}